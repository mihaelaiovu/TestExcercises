{
	"info": {
		"_postman_id": "390ea925-5c7b-4831-a553-68b0b95108fa",
		"name": "Restful Booker",
		"description": "## Overview\nThe Restful Booker API is a sample API based on hotel bookings. The API contains endpoints to demonstrate CRUD operations. The source code can be obtained from https://github.com/mwinteringham/restful-booker\n\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Get Auth Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4ebb965a-e091-4af6-9af8-02463a1303e9",
								"exec": [
									"",
									"pm.globals.set(\"my_booker_token\", pm.response.json().token);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "85908a6b-585a-4877-a4c6-a0fda0e828cf",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"admin\",\r\n    \"password\": \"password123\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						},
						"description": "Get auth token"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Bookings",
			"item": [
				{
					"name": "Get Bookings",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e2a9a7a0-e79d-4b0a-8036-4f043c2ed658",
								"exec": [
									"var status_code = 200;",
									"pm.test(\"Status code is \" + status_code, function () {",
									"    pm.response.to.have.status(status_code);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/booking",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking"
							]
						},
						"description": "Get a list of all bookings"
					},
					"response": []
				},
				{
					"name": "Create new Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5dde0711-a6bc-4ede-a965-2f1506f0601a",
								"exec": [
									"",
									"var jsonData = pm.response.json();",
									"var status_code = 200;",
									"var first_name = pm.environment.get(\"first_name\") ;",
									"var last_name = pm.environment.get(\"last_name\") ;",
									"var total_price = pm.environment.get(\"total_price\") ;",
									"var deposit_paid = pm.environment.get(\"deposit_paid\") ;",
									"var additional_needs = pm.environment.get(\"additional_needs\");",
									"var check_in_date = pm.environment.get(\"check_in_date\") ;",
									"var check_out_date = pm.environment.get(\"check_out_date\") ;",
									"",
									"",
									"pm.test(\"Status code is \" + status_code, function () {",
									"    pm.response.to.have.status(status_code);",
									"});",
									"",
									"pm.globals.set(\"bookingID\", pm.response.json().bookingid);",
									"",
									"",
									"pm.test(\"Check first name of new Booking\", function () {",
									"    pm.expect(jsonData.booking.firstname).to.eql(first_name);",
									"});",
									"",
									"pm.test(\"Check last name of new Booking\", function () {",
									"    pm.expect(jsonData.booking.lastname).to.eql(last_name);",
									"});",
									"pm.test(\"Check totalprice of new Booking\", function () {",
									"    pm.expect(jsonData.booking.totalprice).to.eql(total_price);",
									"});",
									"pm.test(\"Check depositpaid of new Booking\", function () {",
									"    pm.expect(jsonData.booking.depositpaid).to.eql(deposit_paid);",
									"});",
									"pm.test(\"Check additional meals of new Booking\", function () {",
									"    pm.expect(jsonData.booking.additionalneeds).to.eql(additional_needs);",
									"});",
									"pm.test(\"Check date of checkin of new Booking\", function () {",
									"    pm.expect(jsonData.booking.bookingdates.checkin).to.eql(check_in_date);",
									"});",
									"pm.test(\"Check date of checkout of new Booking\", function () {",
									"    pm.expect(jsonData.booking.bookingdates.checkout).to.eql(check_out_date);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"var url = pm.environment.get(\"url\") + \"/booking/\" +  pm.globals.get(\"bookingID\");",
									"",
									"",
									"const getRequest = {",
									"        url: url,",
									"        method: 'GET'",
									"};",
									"",
									"pm.sendRequest(getRequest, function (err, response) {",
									"    if (err) { ",
									"        console.log(err);",
									"    }",
									"    ",
									"    console.log(response);",
									"    ",
									"   pm.test('Response should be OK', function () {",
									"        pm.expect(response.status).to.include(\"OK\");",
									"    });",
									"    ",
									"    pm.test(\"Response code 200\", function() {",
									"        pm.expect(response.code).to.equal(200);",
									"    })",
									"    pm.test(\"Check first name is Sally\", function () {",
									"        pm.expect(response.json().firstname).to.eql(first_name);",
									"    })",
									"    pm.test(\"Check last name is Brown\", function () {",
									"        pm.expect(response.json().lastname).to.eql(last_name);",
									"    })",
									"    pm.test(\"Check total price is 111\", function () {",
									"        pm.expect(response.json().totalprice).to.eql(total_price);",
									"    })",
									"    pm.test(\"Check if beposid is paid\", function () {",
									"        pm.expect(response.json().depositpaid).to.eql(deposit_paid);",
									"    })",
									"    pm.test(\"Check first additional needs is breakfast\", function () {",
									"        pm.expect(response.json().additionalneeds).to.eql(additional_needs);",
									"    })",
									"    pm.test(\"Check check in date is correct\", function () {",
									"        pm.expect(response.json().bookingdates.checkin).to.eql(check_in_date);",
									"    })",
									"    pm.test(\"Check check out date is correct\", function () {",
									"        pm.expect(response.json().bookingdates.checkout).to.eql(check_out_date);",
									"    })",
									"",
									"",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "208bc6c8-f197-46c8-89de-b2a6ac5bafe3",
								"exec": [
									"pm.environment.set(\"first_name\", \"Sally\") ;\r",
									"pm.environment.set(\"last_name\", \"Brown\") ;\r",
									"pm.environment.set(\"total_price\", 111) ;\r",
									"pm.environment.set(\"deposit_paid\", true);\r",
									"pm.environment.set(\"additional_needs\", \"Breakfast\");\r",
									"pm.environment.set(\"check_in_date\", \"2020-03-06\");\r",
									"pm.environment.set(\"check_out_date\", \"2020-03-09\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"firstname\" : \"{{first_name}}\",\r\n  \"lastname\" : \"{{last_name}}\",\r\n  \"totalprice\" : {{total_price}},\r\n  \"depositpaid\" : {{deposit_paid}},\r\n  \"additionalneeds\" : \"{{additional_needs}}\",\r\n  \"bookingdates\" : {\r\n    \"checkin\" : \"{{check_in_date}}\",\r\n    \"checkout\" : \"{{check_out_date}}\"\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{url}}/booking",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Booking by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "21ee0aa2-372c-4dbf-9317-ae7ad6ef4d8c",
								"exec": [
									"var jsonData = pm.response.json();",
									"var status_code = 200;",
									"",
									"pm.test(\"Status code is \" + status_code, function () {",
									"    pm.response.to.have.status(status_code);",
									"});",
									"",
									"pm.test(\"Check booking is not empty\", function() {",
									"    pm.expect(jsonData.booking).to.not.equal(null);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/booking/{{bookingID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking",
								"{{bookingID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "78e18df7-62b7-46d9-a793-6e9640855498",
								"exec": [
									"var status_code = 200;",
									"pm.test(\"Status code is \" + status_code, function () {",
									"    pm.response.to.have.status(status_code);",
									"});",
									"",
									"var first_name = pm.environment.get(\"first_name\") ;",
									"",
									"var check_in_date = pm.environment.get(\"check_in_date\") ;",
									"",
									"",
									"",
									"pm.test(\"Check first name is uppdated\", function () {",
									"    pm.expect(pm.response.text()).to.include(first_name);",
									"});",
									"pm.test(\"Check that checkin date is uppdated\", function () {",
									"    pm.expect(pm.response.text()).to.include(check_in_date);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f35b695d-0829-4544-b567-c8fea01e593d",
								"exec": [
									"pm.environment.set(\"first_name\", \"James\") ;\r",
									"pm.environment.set(\"last_name\", \"Brown\") ;\r",
									"pm.environment.set(\"total_price\", \"111\") ;\r",
									"pm.environment.set(\"deposit_paid\", true);\r",
									"pm.environment.set(\"additional_needs\", \"Breakfast\");\r",
									"pm.environment.set(\"check_in_date\", \"2020-03-06\");\r",
									"pm.environment.set(\"check_out_date\", \"2020-03-09\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Cookie",
								"value": "token={{my_booker_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"firstname\" : \"{{first_name}}\",\r\n  \"lastname\" : \"{{last_name}}\",\r\n  \"totalprice\" : {{total_price}},\r\n  \"depositpaid\" : {{deposit_paid}},\r\n  \"additionalneeds\" : \"{{additional_needs}}\",\r\n  \"bookingdates\" : {\r\n    \"checkin\" : \"{{check_in_date}}\",\r\n    \"checkout\" : \"{{check_out_date}}\"\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{url}}/booking/{{bookingID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking",
								"{{bookingID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Booking (partial)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "78e18df7-62b7-46d9-a793-6e9640855498",
								"exec": [
									"var status_code = 200;",
									"pm.test(\"Status code is \" + status_code, function () {",
									"    pm.response.to.have.status(status_code);",
									"});",
									"",
									"var first_name = pm.environment.get(\"first_name\") ;",
									"var last_name = pm.environment.get(\"last_name\") ;",
									"var additional_needs = pm.environment.get(\"additional_needs\");",
									"",
									"",
									"pm.test(\"Booking of first name is updated\", function () {",
									"    pm.expect(pm.response.text()).to.include(first_name);",
									"});",
									"",
									"pm.test(\"Booking of last name is updated\", function () {",
									"    pm.expect(pm.response.text()).to.include(last_name);",
									"});",
									"",
									"pm.test(\"Booking of additional meals is updated\", function () {",
									"    pm.expect(pm.response.text()).to.include(additional_needs);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1a746589-0585-4af8-8889-a542e73eff22",
								"exec": [
									"pm.environment.set(\"first_name\", \"Jim\") ;\r",
									"pm.environment.set(\"last_name\", \"Brown\") ;\r",
									"pm.environment.set(\"additional_needs\", \"Breakfast and dinner\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"type": "text",
								"value": "token={{my_booker_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"firstname\" : \"{{first_name}}\",\r\n  \"lastname\" : \"{{last_name}}\",\r\n  \"additionalneeds\" : \"{{additional_needs}}\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/booking/{{bookingID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking",
								"{{bookingID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "565047c0-2425-409f-9527-a706b820ee9d",
								"exec": [
									"",
									"var url = pm.environment.get(\"url\") + \"/booking/\" +  pm.globals.get(\"bookingID\");",
									"var status_code = 201;",
									"",
									"pm.test(\"Status code is \" + status_code, function () {",
									"    pm.response.to.have.status(status_code);",
									"});",
									"",
									"",
									"const getRequest = {",
									"        url: url,",
									"        method: 'GET'",
									"};",
									"",
									"pm.sendRequest(getRequest, function (err, res) {",
									"    if (err) { ",
									"        console.log(err);",
									"    }",
									"    ",
									"    console.log(res);",
									"    ",
									"    pm.test('Response should be Not Found', function () {",
									"        pm.expect(res.status).to.include(\"Not Found\");",
									"    });",
									"    ",
									"    pm.test(\"Response code 404\", function() {",
									"        pm.expect(res.code).to.equal(404);",
									"    })",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Cookie",
								"value": "token={{my_booker_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/booking/{{bookingID}}?=",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking",
								"{{bookingID}}"
							],
							"query": [
								{
									"key": "",
									"value": ""
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "All bookings requests ",
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "de0423f3-d3bf-463b-9f55-1b740214ad26",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "d95ca0a9-9d06-46e0-bad6-cd7589cfcdb2",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}